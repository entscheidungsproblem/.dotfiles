#if [[ ! -d ~/.zplug ]]; then
#  git clone https://github.com/zplug/zplug ~/.zplug
#  source ~/.zplug/init.zsh && zplug update --self
#fi

source ~/.zplug/init.zsh

zplug "plugins/gitfast",   from:oh-my-zsh
zplug "plugins/sudo",   from:oh-my-zsh
zplug "plugins/terraform",   from:oh-my-zsh

zplug "bhilburn/powerlevel9k", use:powerlevel9k.zsh-theme

#zplug "trapd00r/zsh-syntax-highlighting-filetypes"
zplug "sparsick/ansible-zsh"
zplug "djui/alias-tips"
zplug "ael-code/zsh-colored-man-pages"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-syntax-highlighting"
zplug "zsh-users/zsh-completions"
zplug "zdharma/history-search-multi-word"
#zplug "Aloxaf/fzf-tab"

################

bindkey "^[[1;3A" beginning-of-line
bindkey "^[[1;3B" end-of-line
bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word


export PATH="${PATH}:/Users/pvickery/projects/.dotfiles/bin:/Users/pvickery/Library/Python/3.7/bin:/Users/pvickery/.local/bin/:/Users/pvickery/Library/Python/2.7/bin"

# For pywal
# Import colorscheme from 'wal' asynchronously
# &   # Run the process in the background.
# ( ) # Hide shell job control messages.
(cat ~/.cache/wal/sequences &)
# To add support for TTYs this line can be optionally added.
#source ~/.cache/wal/colors-tty.sh
#export PATH="${PATH}:/Users/pvickery/Library/Python/3.7/bin:/Users/pvickery/.local/bin/:/Users/pvickery/Library/Python/2.7/bin"
# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# remove command lines from the history list when the first character on the
# line is a space
setopt histignorespace

##############################################################################
# History Configuration
##############################################################################
HISTSIZE=10000               #How many lines of history to keep in memory
HISTFILE=~/.zsh_history     #Where to save history to disk
SAVEHIST=10000               #Number of history entries to save to disk
#HISTDUP=erase               #Erase duplicates in the history file
setopt    appendhistory     #Append history to the history file (no overwriting)
setopt    sharehistory      #Share history across terminals
setopt incappendhistory #Immediately append to the history file, not just when a term is killed

# avoid "beep"ing
setopt nobeep

export ZSH_PLUGINS_ALIAS_TIPS_EXCLUDES="_ ll vi"
export LS_OPTIONS="--color=auto"
alias grep='grep --color=auto'

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

walload

# Exa / ls
alias ll='exa -l'
alias l='exa'
alias la='exa -la'
alias lt='exa -l -s date -r'
alias ld='exa -l -s date -r'
alias lda='exa -la -s date -r'
alias lb='du -hd 1'
alias tree="exa -T -L "

# Clear
alias cl='clear'
alias cll='clear; exa'
alias clll='clear; exa -l'

alias top10='sudo du -a . | sort -n -r | head -n 10'
alias pingg='ping -c 5 google.ca'
alias ping8='ping -c 5 8.8.8.8'
alias rmf='rm -rf'

# NVim / Vim
alias vi='nvim'
alias vim='nvim'
alias viz='vi ~/.zshrc; . ~/.zshrc; zplug load'
alias vit='vi ~/todo'

alias -g gr='| grep'

# Git
alias gits='git status ';
# Git + Kitty
alias kgd='git difftool --no-symlinks --dir-diff ';
alias kgdm='git difftool --no-symlinks --dir-diff master';
alias kgdmo='git difftool --no-symlinks --dir-diff master origin';
alias kd='kitty +kitten diff';

# Kitty
alias d="kitty +kitten diff";
alias icat="kitty +kitten icat"


alias ssh="TERM=xterm ssh"

alias batt="bat --decorations=never"
alias pb="pbcopy"

alias cpv="rsync -ah --info=progress2"

alias ip="ip -br -c"
alias cdr="cd $(git rev-parse --show-toplevel)"

function mcd { mkdir $1 && cd $1; }

#Cleanup json
alias js_clean='''sed 's/\\n/\
/g' | sed 's/\\"/"/g' | sed 's/\"{/{/g' | sed 's/}\"/}/g' | jq'''

# TouchBistro
alias cdcs="cd ~/projects/cloud-server"
alias cdacs="cd ~/projects/ansible-cloud-server"
alias cdtcs="cd ~/projects/terraform-cloud-server"
alias sts="/Users/pvickery/projects/devops-tools/aws_cmds/sts.sh"
alias sshup="/Users/pvickery/projects/devops-tools/python/cloud_stack_ssh.py > ~/.ssh/config.d/cloud-server"


#AWS shortcut
alias ami_ecs="aws ec2 describe-images --filters Name=name,Values='amzn2-ami-ecs-hvm*' Name=virtualization-type,Values=hvm Name=architecture,Values=x86_64 --owners 591542846629 | jq '.Images|=sort_by(.CreationDate)'"
alias ami_ubuntu="aws ec2 describe-images --filters Name=name,Values='ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server*' Name=virtualization-type,Values=hvm Name=architecture,Values=x86_64 Name=image-type,Values=machine Name=root-device-type,Values=ebs --owners 099720109477 | jq '.Images|=sort_by(.CreationDate)'"

export NVM_DIR=~/.nvm
. $(brew --prefix nvm)/nvm.sh
#export NPM_TOKEN=


export TOWER_USER=admin
#export TOWER_PASSWORD=

#export DD_CLIENT_API_KEY=
#export DD_CLIENT_APP_KEY=
export DD_API_KEY=$DD_CLIENT_API_KEY
export DD_APP_KEY=$DD_CLIENT_APP_KEY

#export TERRAFORM_TOKEN=
export AWS_DEFAULT_REGION="us-east-1"

# End TB

#zstyle ':fzf-tab:complete:_ssh:*' ignore true

# Then, source plugins and add commands to $PATH
zplug load --verbose && clear

autoload -U +X bashcompinit && bashcompinit

#export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
complete -C aws_completer aws

# Use default python version
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi
export PATH="/usr/local/sbin:$PATH"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
